{"ast":null,"code":"/**\n * This file is seperate from the './i18n.ts' simply to make the Hot Module Replacement work seamlessly.\n * Your components can import this file in 'messages.ts' files which would ruin the HMR if this isn't a separate module\n */\n\nexport const translations = {};\n\n/*\n * Converts the static JSON file into an object where keys are identical\n * but values are strings concatenated according to syntax.\n * This is helpful when using the JSON file keys and still having the intellisense support\n * along with type-safety\n */\nexport const convertLanguageJsonToObject = (json, objToConvertTo = translations, current) => {\n  Object.keys(json).forEach(key => {\n    const currentLookupKey = current ? `${current}.${key}` : key;\n    if (typeof json[key] === 'object') {\n      objToConvertTo[key] = {};\n      convertLanguageJsonToObject(json[key], objToConvertTo[key], currentLookupKey);\n    } else {\n      objToConvertTo[key] = currentLookupKey;\n    }\n  });\n};","map":{"version":3,"names":["translations","convertLanguageJsonToObject","json","objToConvertTo","current","Object","keys","forEach","key","currentLookupKey"],"sources":["/home/andrei/my-app/src/locales/translations.ts"],"sourcesContent":["import { ConvertedToObjectType, TranslationJsonType } from './types';\n\n/**\n * This file is seperate from the './i18n.ts' simply to make the Hot Module Replacement work seamlessly.\n * Your components can import this file in 'messages.ts' files which would ruin the HMR if this isn't a separate module\n */\n\nexport const translations: ConvertedToObjectType<TranslationJsonType> =\n  {} as any;\n\n/*\n * Converts the static JSON file into an object where keys are identical\n * but values are strings concatenated according to syntax.\n * This is helpful when using the JSON file keys and still having the intellisense support\n * along with type-safety\n */\nexport const convertLanguageJsonToObject = (\n  json: any,\n  objToConvertTo = translations,\n  current?: string,\n) => {\n  Object.keys(json).forEach(key => {\n    const currentLookupKey = current ? `${current}.${key}` : key;\n    if (typeof json[key] === 'object') {\n      objToConvertTo[key] = {};\n      convertLanguageJsonToObject(\n        json[key],\n        objToConvertTo[key],\n        currentLookupKey,\n      );\n    } else {\n      objToConvertTo[key] = currentLookupKey;\n    }\n  });\n};\n"],"mappings":"AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,YAAwD,GACnE,CAAC,CAAQ;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,2BAA2B,GAAGA,CACzCC,IAAS,EACTC,cAAc,GAAGH,YAAY,EAC7BI,OAAgB,KACb;EACHC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;IAC/B,MAAMC,gBAAgB,GAAGL,OAAO,GAAI,GAAEA,OAAQ,IAAGI,GAAI,EAAC,GAAGA,GAAG;IAC5D,IAAI,OAAON,IAAI,CAACM,GAAG,CAAC,KAAK,QAAQ,EAAE;MACjCL,cAAc,CAACK,GAAG,CAAC,GAAG,CAAC,CAAC;MACxBP,2BAA2B,CACzBC,IAAI,CAACM,GAAG,CAAC,EACTL,cAAc,CAACK,GAAG,CAAC,EACnBC,gBACF,CAAC;IACH,CAAC,MAAM;MACLN,cAAc,CAACK,GAAG,CAAC,GAAGC,gBAAgB;IACxC;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}