{"ast":null,"code":"var _jsxFileName = \"/home/andrei/my-app/src/index.tsx\";\n/**\n * index.tsx\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport FontFaceObserver from 'fontfaceobserver';\n\n// Use consistent styling\nimport 'sanitize.css/sanitize.css';\nimport { App } from 'app';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { configureAppStore } from 'store/configureStore';\nimport { ThemeProvider } from 'styles/theme/ThemeProvider';\nimport reportWebVitals from 'reportWebVitals';\n\n// Initialize languages\nimport './locales/i18n';\n\n// Observe loading of Inter (to remove 'Inter', remove the <link> tag in\n// the index.html file and this observer)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openSansObserver = new FontFaceObserver('Inter', {});\n\n// When Inter is loaded, add a font-family using Inter to the body\nopenSansObserver.load().then(() => {\n  document.body.classList.add('fontLoaded');\n});\nconst store = configureAppStore();\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(HelmetProvider, {\n      children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this));\n\n// Hot reloadable translation json files\nif (module.hot) {\n  module.hot.accept(['./locales/i18n'], () => {\n    // No need to render the App again because i18next works with the hooks\n  });\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","Provider","FontFaceObserver","App","HelmetProvider","configureAppStore","ThemeProvider","reportWebVitals","jsxDEV","_jsxDEV","openSansObserver","load","then","document","body","classList","add","store","root","createRoot","getElementById","render","children","StrictMode","fileName","_jsxFileName","lineNumber","columnNumber","module","hot","accept"],"sources":["/home/andrei/my-app/src/index.tsx"],"sourcesContent":["/**\n * index.tsx\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport * as React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport FontFaceObserver from 'fontfaceobserver';\n\n// Use consistent styling\nimport 'sanitize.css/sanitize.css';\n\nimport { App } from 'app';\n\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport { configureAppStore } from 'store/configureStore';\n\nimport { ThemeProvider } from 'styles/theme/ThemeProvider';\n\nimport reportWebVitals from 'reportWebVitals';\n\n// Initialize languages\nimport './locales/i18n';\n\n// Observe loading of Inter (to remove 'Inter', remove the <link> tag in\n// the index.html file and this observer)\nconst openSansObserver = new FontFaceObserver('Inter', {});\n\n// When Inter is loaded, add a font-family using Inter to the body\nopenSansObserver.load().then(() => {\n  document.body.classList.add('fontLoaded');\n});\n\nconst store = configureAppStore();\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <Provider store={store}>\n    <ThemeProvider>\n      <HelmetProvider>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </HelmetProvider>\n    </ThemeProvider>\n  </Provider>,\n);\n\n// Hot reloadable translation json files\nif (module.hot) {\n  module.hot.accept(['./locales/i18n'], () => {\n    // No need to render the App again because i18next works with the hooks\n  });\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,yBAAyB;AAChC,OAAO,2BAA2B;AAElC,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,gBAAgB,MAAM,kBAAkB;;AAE/C;AACA,OAAO,2BAA2B;AAElC,SAASC,GAAG,QAAQ,KAAK;AAEzB,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,SAASC,iBAAiB,QAAQ,sBAAsB;AAExD,SAASC,aAAa,QAAQ,4BAA4B;AAE1D,OAAOC,eAAe,MAAM,iBAAiB;;AAE7C;AACA,OAAO,gBAAgB;;AAEvB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG,IAAIR,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;;AAE1D;AACAQ,gBAAgB,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;EACjCC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;AAC3C,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAGZ,iBAAiB,CAAC,CAAC;AACjC,MAAMa,IAAI,GAAGlB,QAAQ,CAACmB,UAAU,CAC9BN,QAAQ,CAACO,cAAc,CAAC,MAAM,CAChC,CAAC;AAEDF,IAAI,CAACG,MAAM,eACTZ,OAAA,CAACR,QAAQ;EAACgB,KAAK,EAAEA,KAAM;EAAAK,QAAA,eACrBb,OAAA,CAACH,aAAa;IAAAgB,QAAA,eACZb,OAAA,CAACL,cAAc;MAAAkB,QAAA,eACbb,OAAA,CAACV,KAAK,CAACwB,UAAU;QAAAD,QAAA,eACfb,OAAA,CAACN,GAAG;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACR,CACZ,CAAC;;AAED;AACA,IAAIC,MAAM,CAACC,GAAG,EAAE;EACdD,MAAM,CAACC,GAAG,CAACC,MAAM,CAAC,CAAC,gBAAgB,CAAC,EAAE,MAAM;IAC1C;EAAA,CACD,CAAC;AACJ;;AAEA;AACA;AACA;AACAvB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}