{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useInjectReducer as useReducer, useInjectSaga as useSaga } from 'redux-injectors';\n/* Wrap redux-injectors with stricter types */\n\nexport function useInjectReducer(params) {\n  _s();\n  return useReducer(params);\n}\n_s(useInjectReducer, \"jy6jq7rVoxhm7wg6eOprl3hauQQ=\");\nexport function useInjectSaga(params) {\n  _s2();\n  return useSaga(params);\n}\n_s2(useInjectSaga, \"/GtKyILcl66QPFoHuMzlSUNmBOQ=\", false, function () {\n  return [useSaga];\n});","map":{"version":3,"names":["useInjectReducer","useReducer","useInjectSaga","useSaga","params","_s","_s2"],"sources":["/home/andrei/my-app/src/utils/redux-injectors.ts"],"sourcesContent":["import {\n  useInjectReducer as useReducer,\n  useInjectSaga as useSaga,\n} from 'redux-injectors';\nimport {\n  InjectReducerParams,\n  InjectSagaParams,\n  RootStateKeyType,\n} from './types/injector-typings';\n\n/* Wrap redux-injectors with stricter types */\n\nexport function useInjectReducer<Key extends RootStateKeyType>(\n  params: InjectReducerParams<Key>,\n) {\n  return useReducer(params);\n}\n\nexport function useInjectSaga(params: InjectSagaParams) {\n  return useSaga(params);\n}\n"],"mappings":";;AAAA,SACEA,gBAAgB,IAAIC,UAAU,EAC9BC,aAAa,IAAIC,OAAO,QACnB,iBAAiB;AAOxB;;AAEA,OAAO,SAASH,gBAAgBA,CAC9BI,MAAgC,EAChC;EAAAC,EAAA;EACA,OAAOJ,UAAU,CAACG,MAAM,CAAC;AAC3B;AAACC,EAAA,CAJeL,gBAAgB;AAMhC,OAAO,SAASE,aAAaA,CAACE,MAAwB,EAAE;EAAAE,GAAA;EACtD,OAAOH,OAAO,CAACC,MAAM,CAAC;AACxB;AAACE,GAAA,CAFeJ,aAAa;EAAA,QACpBC,OAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}