{"ast":null,"code":"/**\n * This function has two roles:\n * 1) If the `id` is empty it assings something so does i18next doesn't throw error. Typescript should prevent this anyway\n * 2) It has a hand-picked name `_t` (to be short) and should only be used while using objects instead of strings for translation keys\n * `internals/extractMessages/stringfyTranslations.js` script converts this to `t('a.b.c')` style before `i18next-scanner` scans the file contents\n * so that our json objects can also be recognized by the scanner.\n */\nexport const _t = (id, ...rest) => {\n  if (!id) {\n    id = '_NOT_TRANSLATED_';\n  }\n  return [id, ...rest];\n};","map":{"version":3,"names":["_t","id","rest"],"sources":["/home/andrei/my-app/src/utils/messages.ts"],"sourcesContent":["/**\n * This function has two roles:\n * 1) If the `id` is empty it assings something so does i18next doesn't throw error. Typescript should prevent this anyway\n * 2) It has a hand-picked name `_t` (to be short) and should only be used while using objects instead of strings for translation keys\n * `internals/extractMessages/stringfyTranslations.js` script converts this to `t('a.b.c')` style before `i18next-scanner` scans the file contents\n * so that our json objects can also be recognized by the scanner.\n */\nexport const _t = (id: string, ...rest: any[]): [string, ...any[]] => {\n  if (!id) {\n    id = '_NOT_TRANSLATED_';\n  }\n  return [id, ...rest];\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,EAAE,GAAGA,CAACC,EAAU,EAAE,GAAGC,IAAW,KAAyB;EACpE,IAAI,CAACD,EAAE,EAAE;IACPA,EAAE,GAAG,kBAAkB;EACzB;EACA,OAAO,CAACA,EAAE,EAAE,GAAGC,IAAI,CAAC;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}